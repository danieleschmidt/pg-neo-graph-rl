version: '3.8'

services:
  # Development environment
  dev:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - pip-cache:/home/app/.cache/pip
    environment:
      - PYTHONPATH=/app
    ports:
      - "8888:8888"  # Jupyter
      - "6006:6006"  # TensorBoard
    command: bash
    stdin_open: true
    tty: true

  # Testing environment
  test:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - pip-cache:/home/app/.cache/pip
    environment:
      - PYTHONPATH=/app
    command: pytest --cov=pg_neo_graph_rl --cov-report=html
    
  # Production environment
  prod:
    build:
      context: .
      target: production
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped

  # GPU-enabled environment
  gpu:
    build:
      context: .
      target: gpu
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    command: python -c "import jax; print(f'JAX devices: {jax.devices()}')"

  # Jupyter notebook server
  jupyter:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - jupyter-data:/home/app/.jupyter
    ports:
      - "8888:8888"
    environment:
      - PYTHONPATH=/app
    command: >
      bash -c "pip install jupyter jupyterlab &&
               jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
               --NotebookApp.token='' --NotebookApp.password=''"

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # Database for metrics and results
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pg_neo_graph_rl
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: postgres -c log_statement=all -c log_destination=stderr

volumes:
  pip-cache:
  jupyter-data:
  prometheus-data:
  grafana-data:
  redis-data:
  postgres-data: