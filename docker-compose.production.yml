version: '3.8'

services:
  sentiment-analyzer:
    build:
      context: .
      target: production
    image: sentiment-analyzer-pro:latest
    container_name: sentiment-analyzer-api
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=INFO
      - MODEL_CACHE_DIR=/app/models
      - PYTHONUNBUFFERED=1
      - MAX_WORKERS=4
      - BATCH_SIZE=32
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    networks:
      - sentiment-network

  nginx:
    image: nginx:alpine
    container_name: sentiment-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - sentiment-analyzer
    restart: unless-stopped
    networks:
      - sentiment-network

  redis:
    image: redis:7-alpine
    container_name: sentiment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - sentiment-network

  prometheus:
    image: prom/prometheus:latest
    container_name: sentiment-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - sentiment-network

  grafana:
    image: grafana/grafana:latest
    container_name: sentiment-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - sentiment-network

  # GPU version (uncomment if using GPU)
  # sentiment-analyzer-gpu:
  #   build:
  #     context: .
  #     target: gpu
  #   image: sentiment-analyzer-pro:gpu
  #   container_name: sentiment-analyzer-gpu
  #   runtime: nvidia
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - LOG_LEVEL=INFO
  #     - MODEL_CACHE_DIR=/app/models
  #   volumes:
  #     - ./models:/app/models
  #     - ./logs:/app/logs
  #   ports:
  #     - "8001:8000"
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

networks:
  sentiment-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data: