# PG-Neo-Graph-RL Environment Variables
# Copy this file to .env and update values as needed

#==============================================================================
# Core Configuration
#==============================================================================

# Environment mode: development, testing, production
ENVIRONMENT=development

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Random seed for reproducibility
RANDOM_SEED=42

#==============================================================================
# JAX Configuration
#==============================================================================

# Enable JAX debug mode (slower but better error messages)
JAX_DEBUG_NANS=false
JAX_DEBUG_INFS=false

# JAX memory preallocation (90% of GPU memory)
XLA_PYTHON_CLIENT_PREALLOCATE=true
XLA_PYTHON_CLIENT_MEM_FRACTION=0.9

# Platform priority: cpu, gpu, tpu
JAX_PLATFORM_NAME=gpu

# Number of JAX devices to use
JAX_DEVICES=1

#==============================================================================
# Distributed Training
#==============================================================================

# Number of federated learning agents
NUM_AGENTS=10

# Communication protocol: gossip, hierarchical, ring
COMMUNICATION_PROTOCOL=gossip

# Gossip protocol parameters
GOSSIP_NEIGHBORS=3
GOSSIP_MIXING_WEIGHT=0.5

# Communication frequency (steps between aggregation)
COMMUNICATION_FREQUENCY=10

#==============================================================================
# Model Configuration
#==============================================================================

# Graph neural network architecture
GNN_HIDDEN_DIM=128
GNN_NUM_LAYERS=3
GNN_NUM_HEADS=8
GNN_DROPOUT_RATE=0.1

# Reinforcement learning algorithm
RL_ALGORITHM=ppo
RL_LEARNING_RATE=3e-4
RL_BATCH_SIZE=256
RL_GAMMA=0.99
RL_GAE_LAMBDA=0.95

#==============================================================================
# Environment Configuration
#==============================================================================

# Default environment type: traffic, power_grid, swarm
DEFAULT_ENVIRONMENT=traffic

# Traffic environment settings
TRAFFIC_CITY=manhattan
TRAFFIC_NUM_INTERSECTIONS=100
TRAFFIC_TIME_RESOLUTION=5

# Power grid environment settings
POWER_GRID_FILE=ieee_118.json
POWER_GRID_CONTINGENCIES=true

# Swarm environment settings
SWARM_NUM_DRONES=50
SWARM_COMMUNICATION_RANGE=100.0

#==============================================================================
# Privacy & Security
#==============================================================================

# Enable differential privacy
ENABLE_DIFFERENTIAL_PRIVACY=false

# Differential privacy parameters
DP_EPSILON=1.0
DP_DELTA=1e-5
DP_NOISE_MULTIPLIER=1.1
DP_CLIPPING_THRESHOLD=1.0

# Secure aggregation
ENABLE_SECURE_AGGREGATION=false

#==============================================================================
# Monitoring & Observability
#==============================================================================

# Enable monitoring
ENABLE_MONITORING=true

# Prometheus configuration
PROMETHEUS_HOST=localhost
PROMETHEUS_PORT=9090
PROMETHEUS_PUSH_GATEWAY=localhost:9091

# Grafana configuration
GRAFANA_HOST=localhost
GRAFANA_PORT=3000
GRAFANA_USERNAME=admin
GRAFANA_PASSWORD=admin

# Weights & Biases tracking
WANDB_PROJECT=pg-neo-graph-rl
WANDB_ENTITY=your-username
WANDB_API_KEY=your-api-key

# TensorBoard logging
TENSORBOARD_LOG_DIR=./logs/tensorboard

#==============================================================================
# Storage & Checkpointing
#==============================================================================

# Model checkpoint directory
CHECKPOINT_DIR=./checkpoints

# Save frequency (episodes between saves)
SAVE_FREQUENCY=100

# Maximum number of checkpoints to keep
MAX_CHECKPOINTS=10

# Results directory
RESULTS_DIR=./results

# Dataset directory
DATA_DIR=./data

#==============================================================================
# Performance & Resource Management
#==============================================================================

# Number of parallel workers
NUM_WORKERS=4

# Memory limit (GB)
MEMORY_LIMIT=16

# Batch processing settings
PREFETCH_SIZE=2
BUFFER_SIZE=10000

# Graph sampling for large networks
ENABLE_GRAPH_SAMPLING=false
GRAPH_SAMPLE_SIZE=1000

#==============================================================================
# Development & Debugging
#==============================================================================

# Enable debug mode (additional logging, assertions)
DEBUG=false

# Enable profiling
ENABLE_PROFILING=false

# Profiling output directory
PROFILE_DIR=./profiles

# Enable automatic mixed precision
ENABLE_AMP=true

# Gradient accumulation steps
GRADIENT_ACCUMULATION_STEPS=1

#==============================================================================
# Testing Configuration
#==============================================================================

# Test data directory
TEST_DATA_DIR=./tests/data

# Test timeout (seconds)
TEST_TIMEOUT=300

# Integration test settings
INTEGRATION_TEST_AGENTS=5
INTEGRATION_TEST_EPISODES=10

#==============================================================================
# External Services
#==============================================================================

# Redis (for distributed coordination)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# PostgreSQL (for experiment tracking)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=pgneographrl
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Docker registry (for deployment)
DOCKER_REGISTRY=ghcr.io
DOCKER_NAMESPACE=your-org

#==============================================================================
# Cloud Configuration (Optional)
#==============================================================================

# AWS Configuration
AWS_REGION=us-west-2
AWS_S3_BUCKET=pg-neo-graph-rl-data

# Google Cloud Configuration
GCP_PROJECT_ID=your-project-id
GCP_BUCKET=pg-neo-graph-rl-data

# Azure Configuration  
AZURE_SUBSCRIPTION_ID=your-subscription-id
AZURE_RESOURCE_GROUP=pg-neo-graph-rl
AZURE_STORAGE_ACCOUNT=pgneodata